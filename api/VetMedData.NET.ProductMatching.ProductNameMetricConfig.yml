### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  commentId: T:VetMedData.NET.ProductMatching.ProductNameMetricConfig
  id: ProductNameMetricConfig
  parent: VetMedData.NET.ProductMatching
  children:
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
  - VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
  langs:
  - csharp
  - vb
  name: ProductNameMetricConfig
  nameWithType: ProductNameMetricConfig
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  type: Class
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ProductNameMetricConfig
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 9
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nConfigures medicine similarity metric behaviour\n"
  example: []
  syntax:
    content: public abstract class ProductNameMetricConfig
    content.vb: Public MustInherit Class ProductNameMetricConfig
  inheritance:
  - System.Object
  derivedClasses:
  - VetMedData.NET.ProductMatching.DefaultProductNameMetricConfig
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
  id: InnerMetric
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: InnerMetric
  nameWithType: ProductNameMetricConfig.InnerMetric
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: InnerMetric
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 14
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nString similarity metric to use when comparing names\n"
  example: []
  syntax:
    content: public AbstractStringMetric InnerMetric { get; set; }
    parameters: []
    return:
      type: SimMetrics.Net.API.AbstractStringMetric
    content.vb: Public Property InnerMetric As AbstractStringMetric
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
  id: NameCleaningConfig
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: NameCleaningConfig
  nameWithType: ProductNameMetricConfig.NameCleaningConfig
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: NameCleaningConfig
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 18
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nName pre-cleaning configuration\n"
  example: []
  syntax:
    content: public NameCleaningConfig NameCleaningConfig { get; set; }
    parameters: []
    return:
      type: VetMedData.NET.ProductMatching.NameCleaningConfig
    content.vb: Public Property NameCleaningConfig As NameCleaningConfig
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
  id: Tokeniser
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: Tokeniser
  nameWithType: ProductNameMetricConfig.Tokeniser
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Tokeniser
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 23
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nTokeniser for pairwise token similarity measurement.\nIf left null then whole name strings will be compared.\n"
  example: []
  syntax:
    content: public ITokeniser Tokeniser { get; set; }
    parameters: []
    return:
      type: SimMetrics.Net.API.ITokeniser
    content.vb: Public Property Tokeniser As ITokeniser
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
  id: APositionalWeightingCoefficientPower
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: APositionalWeightingCoefficientPower
  nameWithType: ProductNameMetricConfig.APositionalWeightingCoefficientPower
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: APositionalWeightingCoefficientPower
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 28
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nPower to which the token index will be raised to form\ninverse weighting coefficient for A string\n"
  example: []
  syntax:
    content: public double APositionalWeightingCoefficientPower { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property APositionalWeightingCoefficientPower As Double
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  id: BPositionalWeightingCoefficientPower
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: BPositionalWeightingCoefficientPower
  nameWithType: ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: BPositionalWeightingCoefficientPower
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 33
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nPower to which the token index will be raised to form\ninverse weighting coefficient for B string\n"
  example: []
  syntax:
    content: public double BPositionalWeightingCoefficientPower { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property BPositionalWeightingCoefficientPower As Double
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  commentId: P:VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  id: ABCompoundPositionalWeightRatio
  parent: VetMedData.NET.ProductMatching.ProductNameMetricConfig
  langs:
  - csharp
  - vb
  name: ABCompoundPositionalWeightRatio
  nameWithType: ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductNameMetricConfig.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ABCompoundPositionalWeightRatio
    path: ProductMatching/ProductNameMetricConfig.cs
    startLine: 38
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nRatio of A-token-index-weighting (0) to\nB-token-index-weighting (1) to be applied.\n"
  example: []
  syntax:
    content: public double ABCompoundPositionalWeightRatio { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ABCompoundPositionalWeightRatio As Double
  overload: VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
  name: InnerMetric
  nameWithType: ProductNameMetricConfig.InnerMetric
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.InnerMetric
- uid: SimMetrics.Net.API.AbstractStringMetric
  commentId: T:SimMetrics.Net.API.AbstractStringMetric
  parent: SimMetrics.Net.API
  isExternal: true
  name: AbstractStringMetric
  nameWithType: AbstractStringMetric
  fullName: SimMetrics.Net.API.AbstractStringMetric
- uid: SimMetrics.Net.API
  commentId: N:SimMetrics.Net.API
  isExternal: true
  name: SimMetrics.Net.API
  nameWithType: SimMetrics.Net.API
  fullName: SimMetrics.Net.API
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
  name: NameCleaningConfig
  nameWithType: ProductNameMetricConfig.NameCleaningConfig
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.NameCleaningConfig
- uid: VetMedData.NET.ProductMatching.NameCleaningConfig
  commentId: T:VetMedData.NET.ProductMatching.NameCleaningConfig
  parent: VetMedData.NET.ProductMatching
  name: NameCleaningConfig
  nameWithType: NameCleaningConfig
  fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
  name: Tokeniser
  nameWithType: ProductNameMetricConfig.Tokeniser
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.Tokeniser
- uid: SimMetrics.Net.API.ITokeniser
  commentId: T:SimMetrics.Net.API.ITokeniser
  parent: SimMetrics.Net.API
  isExternal: true
  name: ITokeniser
  nameWithType: ITokeniser
  fullName: SimMetrics.Net.API.ITokeniser
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
  name: APositionalWeightingCoefficientPower
  nameWithType: ProductNameMetricConfig.APositionalWeightingCoefficientPower
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.APositionalWeightingCoefficientPower
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  name: BPositionalWeightingCoefficientPower
  nameWithType: ProductNameMetricConfig.BPositionalWeightingCoefficientPower
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.BPositionalWeightingCoefficientPower
- uid: VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  name: ABCompoundPositionalWeightRatio
  nameWithType: ProductNameMetricConfig.ABCompoundPositionalWeightRatio
  fullName: VetMedData.NET.ProductMatching.ProductNameMetricConfig.ABCompoundPositionalWeightRatio
