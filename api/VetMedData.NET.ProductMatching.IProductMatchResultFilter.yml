### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter
  commentId: T:VetMedData.NET.ProductMatching.IProductMatchResultFilter
  id: IProductMatchResultFilter
  parent: VetMedData.NET.ProductMatching
  children:
  - VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  langs:
  - csharp
  - vb
  name: IProductMatchResultFilter
  nameWithType: IProductMatchResultFilter
  fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter
  type: Interface
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchResultFilter.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: IProductMatchResultFilter
    path: ProductMatching/ProductMatchResultFilter.cs
    startLine: 7
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public interface IProductMatchResultFilter
    content.vb: Public Interface IProductMatchResultFilter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  commentId: M:VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  id: FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  parent: VetMedData.NET.ProductMatching.IProductMatchResultFilter
  langs:
  - csharp
  - vb
  name: FilterResults(IEnumerable<ProductSimilarityResult>)
  nameWithType: IProductMatchResultFilter.FilterResults(IEnumerable<ProductSimilarityResult>)
  fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable<VetMedData.NET.ProductMatching.ProductSimilarityResult>)
  type: Method
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchResultFilter.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: FilterResults
    path: ProductMatching/ProductMatchResultFilter.cs
    startLine: 10
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: IEnumerable<ProductSimilarityResult> FilterResults(IEnumerable<ProductSimilarityResult> results)
    parameters:
    - id: results
      type: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
    return:
      type: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
    content.vb: Function FilterResults(results As IEnumerable(Of ProductSimilarityResult)) As IEnumerable(Of ProductSimilarityResult)
  overload: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults*
  nameWithType.vb: IProductMatchResultFilter.FilterResults(IEnumerable(Of ProductSimilarityResult))
  fullName.vb: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable(Of VetMedData.NET.ProductMatching.ProductSimilarityResult))
  name.vb: FilterResults(IEnumerable(Of ProductSimilarityResult))
references:
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults*
  commentId: Overload:VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults
  name: FilterResults
  nameWithType: IProductMatchResultFilter.FilterResults
  fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults
- uid: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
  commentId: T:System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProductSimilarityResult>
  nameWithType: IEnumerable<ProductSimilarityResult>
  fullName: System.Collections.Generic.IEnumerable<VetMedData.NET.ProductMatching.ProductSimilarityResult>
  nameWithType.vb: IEnumerable(Of ProductSimilarityResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VetMedData.NET.ProductMatching.ProductSimilarityResult)
  name.vb: IEnumerable(Of ProductSimilarityResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
