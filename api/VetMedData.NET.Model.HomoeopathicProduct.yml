### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.Model.HomoeopathicProduct
  commentId: T:VetMedData.NET.Model.HomoeopathicProduct
  id: HomoeopathicProduct
  parent: VetMedData.NET.Model
  children:
  - VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
  - VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
  - VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
  - VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
  langs:
  - csharp
  - vb
  name: HomoeopathicProduct
  nameWithType: HomoeopathicProduct
  fullName: VetMedData.NET.Model.HomoeopathicProduct
  type: Class
  source:
    remote:
      path: VetMedData.NET/Model/VMDPID.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: HomoeopathicProduct
    path: Model/VMDPID.cs
    startLine: 182
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  summary: "\nAuthorised homoepathic product\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class HomoeopathicProduct : ReferenceProduct
    content.vb: >-
      <Serializable>

      Public Class HomoeopathicProduct
          Inherits ReferenceProduct
  inheritance:
  - System.Object
  - VetMedData.NET.Model.Product
  - VetMedData.NET.Model.ReferenceProduct
  inheritedMembers:
  - VetMedData.NET.Model.ReferenceProduct.MAHolder
  - VetMedData.NET.Model.ReferenceProduct.VMNo
  - VetMedData.NET.Model.ReferenceProduct.AuthorisationRoute
  - VetMedData.NET.Model.ReferenceProduct.TargetSpecies
  - VetMedData.NET.Model.ReferenceProduct.ActiveSubstances
  - VetMedData.NET.Model.ReferenceProduct.TargetSpeciesTyped
  - VetMedData.NET.Model.ReferenceProduct.DateOfIssue
  - VetMedData.NET.Model.ReferenceProduct.ToString
  - VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
  - VetMedData.NET.Model.Product.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VetMedData.NET.Model.Product.VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
  commentId: P:VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
  id: ControlledDrug
  parent: VetMedData.NET.Model.HomoeopathicProduct
  langs:
  - csharp
  - vb
  name: ControlledDrug
  nameWithType: HomoeopathicProduct.ControlledDrug
  fullName: VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/VMDPID.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ControlledDrug
    path: Model/VMDPID.cs
    startLine: 186
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string ControlledDrug { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ControlledDrug As String
  overload: VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
  commentId: P:VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
  id: DistributionCategory
  parent: VetMedData.NET.Model.HomoeopathicProduct
  langs:
  - csharp
  - vb
  name: DistributionCategory
  nameWithType: HomoeopathicProduct.DistributionCategory
  fullName: VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/VMDPID.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: DistributionCategory
    path: Model/VMDPID.cs
    startLine: 187
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string DistributionCategory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DistributionCategory As String
  overload: VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
  commentId: P:VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
  id: PharmaceuticalForm
  parent: VetMedData.NET.Model.HomoeopathicProduct
  langs:
  - csharp
  - vb
  name: PharmaceuticalForm
  nameWithType: HomoeopathicProduct.PharmaceuticalForm
  fullName: VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/VMDPID.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: PharmaceuticalForm
    path: Model/VMDPID.cs
    startLine: 188
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string PharmaceuticalForm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PharmaceuticalForm As String
  overload: VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
  commentId: P:VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
  id: TherapeuticGroup
  parent: VetMedData.NET.Model.HomoeopathicProduct
  langs:
  - csharp
  - vb
  name: TherapeuticGroup
  nameWithType: HomoeopathicProduct.TherapeuticGroup
  fullName: VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/VMDPID.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: TherapeuticGroup
    path: Model/VMDPID.cs
    startLine: 189
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string TherapeuticGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TherapeuticGroup As String
  overload: VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VetMedData.NET.Model.Product
  commentId: T:VetMedData.NET.Model.Product
  parent: VetMedData.NET.Model
  name: Product
  nameWithType: Product
  fullName: VetMedData.NET.Model.Product
- uid: VetMedData.NET.Model.ReferenceProduct
  commentId: T:VetMedData.NET.Model.ReferenceProduct
  parent: VetMedData.NET.Model
  name: ReferenceProduct
  nameWithType: ReferenceProduct
  fullName: VetMedData.NET.Model.ReferenceProduct
- uid: VetMedData.NET.Model.ReferenceProduct.MAHolder
  commentId: P:VetMedData.NET.Model.ReferenceProduct.MAHolder
  parent: VetMedData.NET.Model.ReferenceProduct
  name: MAHolder
  nameWithType: ReferenceProduct.MAHolder
  fullName: VetMedData.NET.Model.ReferenceProduct.MAHolder
- uid: VetMedData.NET.Model.ReferenceProduct.VMNo
  commentId: P:VetMedData.NET.Model.ReferenceProduct.VMNo
  parent: VetMedData.NET.Model.ReferenceProduct
  name: VMNo
  nameWithType: ReferenceProduct.VMNo
  fullName: VetMedData.NET.Model.ReferenceProduct.VMNo
- uid: VetMedData.NET.Model.ReferenceProduct.AuthorisationRoute
  commentId: P:VetMedData.NET.Model.ReferenceProduct.AuthorisationRoute
  parent: VetMedData.NET.Model.ReferenceProduct
  name: AuthorisationRoute
  nameWithType: ReferenceProduct.AuthorisationRoute
  fullName: VetMedData.NET.Model.ReferenceProduct.AuthorisationRoute
- uid: VetMedData.NET.Model.ReferenceProduct.TargetSpecies
  commentId: P:VetMedData.NET.Model.ReferenceProduct.TargetSpecies
  parent: VetMedData.NET.Model.ReferenceProduct
  name: TargetSpecies
  nameWithType: ReferenceProduct.TargetSpecies
  fullName: VetMedData.NET.Model.ReferenceProduct.TargetSpecies
- uid: VetMedData.NET.Model.ReferenceProduct.ActiveSubstances
  commentId: P:VetMedData.NET.Model.ReferenceProduct.ActiveSubstances
  parent: VetMedData.NET.Model.ReferenceProduct
  name: ActiveSubstances
  nameWithType: ReferenceProduct.ActiveSubstances
  fullName: VetMedData.NET.Model.ReferenceProduct.ActiveSubstances
- uid: VetMedData.NET.Model.ReferenceProduct.TargetSpeciesTyped
  commentId: P:VetMedData.NET.Model.ReferenceProduct.TargetSpeciesTyped
  parent: VetMedData.NET.Model.ReferenceProduct
  name: TargetSpeciesTyped
  nameWithType: ReferenceProduct.TargetSpeciesTyped
  fullName: VetMedData.NET.Model.ReferenceProduct.TargetSpeciesTyped
- uid: VetMedData.NET.Model.ReferenceProduct.DateOfIssue
  commentId: P:VetMedData.NET.Model.ReferenceProduct.DateOfIssue
  parent: VetMedData.NET.Model.ReferenceProduct
  name: DateOfIssue
  nameWithType: ReferenceProduct.DateOfIssue
  fullName: VetMedData.NET.Model.ReferenceProduct.DateOfIssue
- uid: VetMedData.NET.Model.ReferenceProduct.ToString
  commentId: M:VetMedData.NET.Model.ReferenceProduct.ToString
  parent: VetMedData.NET.Model.ReferenceProduct
  name: ToString()
  nameWithType: ReferenceProduct.ToString()
  fullName: VetMedData.NET.Model.ReferenceProduct.ToString()
  spec.csharp:
  - uid: VetMedData.NET.Model.ReferenceProduct.ToString
    name: ToString
    nameWithType: ReferenceProduct.ToString
    fullName: VetMedData.NET.Model.ReferenceProduct.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.Model.ReferenceProduct.ToString
    name: ToString
    nameWithType: ReferenceProduct.ToString
    fullName: VetMedData.NET.Model.ReferenceProduct.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
  commentId: M:VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
  parent: VetMedData.NET.Model.ReferenceProduct
  name: GetProductActiveRange()
  nameWithType: ReferenceProduct.GetProductActiveRange()
  fullName: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange()
  spec.csharp:
  - uid: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
    name: GetProductActiveRange
    nameWithType: ReferenceProduct.GetProductActiveRange
    fullName: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
    name: GetProductActiveRange
    nameWithType: ReferenceProduct.GetProductActiveRange
    fullName: VetMedData.NET.Model.ReferenceProduct.GetProductActiveRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model.Product.Name
  commentId: P:VetMedData.NET.Model.Product.Name
  parent: VetMedData.NET.Model.Product
  name: Name
  nameWithType: Product.Name
  fullName: VetMedData.NET.Model.Product.Name
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model.Product.VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  parent: VetMedData.NET.ProductMatching.ProductExtensions
  definition: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  name: GetCleanedName(NameCleaningConfig)
  nameWithType: ProductExtensions.GetCleanedName(NameCleaningConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  spec.csharp:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  name: GetCleanedName(Product, NameCleaningConfig)
  nameWithType: ProductExtensions.GetCleanedName(Product, NameCleaningConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product, VetMedData.NET.ProductMatching.NameCleaningConfig)
  spec.csharp:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.Model.Product
    name: Product
    nameWithType: Product
    fullName: VetMedData.NET.Model.Product
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.Model.Product
    name: Product
    nameWithType: Product
    fullName: VetMedData.NET.Model.Product
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.ProductMatching.ProductExtensions
  commentId: T:VetMedData.NET.ProductMatching.ProductExtensions
  parent: VetMedData.NET.ProductMatching
  name: ProductExtensions
  nameWithType: ProductExtensions
  fullName: VetMedData.NET.ProductMatching.ProductExtensions
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug*
  commentId: Overload:VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
  name: ControlledDrug
  nameWithType: HomoeopathicProduct.ControlledDrug
  fullName: VetMedData.NET.Model.HomoeopathicProduct.ControlledDrug
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory*
  commentId: Overload:VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
  name: DistributionCategory
  nameWithType: HomoeopathicProduct.DistributionCategory
  fullName: VetMedData.NET.Model.HomoeopathicProduct.DistributionCategory
- uid: VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm*
  commentId: Overload:VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
  name: PharmaceuticalForm
  nameWithType: HomoeopathicProduct.PharmaceuticalForm
  fullName: VetMedData.NET.Model.HomoeopathicProduct.PharmaceuticalForm
- uid: VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup*
  commentId: Overload:VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
  name: TherapeuticGroup
  nameWithType: HomoeopathicProduct.TherapeuticGroup
  fullName: VetMedData.NET.Model.HomoeopathicProduct.TherapeuticGroup
