### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.Model.Product
  commentId: T:VetMedData.NET.Model.Product
  id: Product
  parent: VetMedData.NET.Model
  children:
  - VetMedData.NET.Model.Product.Name
  langs:
  - csharp
  - vb
  name: Product
  nameWithType: Product
  fullName: VetMedData.NET.Model.Product
  type: Class
  source:
    remote:
      path: VetMedData.NET/Model/Product.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Product
    path: Model/Product.cs
    startLine: 6
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: >-
      [Serializable]

      public class Product
    content.vb: >-
      <Serializable>

      Public Class Product
  inheritance:
  - System.Object
  derivedClasses:
  - VetMedData.NET.Model.ReferenceProduct
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VetMedData.NET.Model.Product.VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VetMedData.NET.Model.Product.Name
  commentId: P:VetMedData.NET.Model.Product.Name
  id: Name
  parent: VetMedData.NET.Model.Product
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Product.Name
  fullName: VetMedData.NET.Model.Product.Name
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/Product.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Name
    path: Model/Product.cs
    startLine: 9
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: VetMedData.NET.Model.Product.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model.Product.VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  parent: VetMedData.NET.ProductMatching.ProductExtensions
  definition: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  name: GetCleanedName(NameCleaningConfig)
  nameWithType: ProductExtensions.GetCleanedName(NameCleaningConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
  spec.csharp:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  name: GetCleanedName(Product, NameCleaningConfig)
  nameWithType: ProductExtensions.GetCleanedName(Product, NameCleaningConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product, VetMedData.NET.ProductMatching.NameCleaningConfig)
  spec.csharp:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.Model.Product
    name: Product
    nameWithType: Product
    fullName: VetMedData.NET.Model.Product
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
    name: GetCleanedName
    nameWithType: ProductExtensions.GetCleanedName
    fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VetMedData.NET.Model.Product
    name: Product
    nameWithType: Product
    fullName: VetMedData.NET.Model.Product
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VetMedData.NET.ProductMatching.NameCleaningConfig
    name: NameCleaningConfig
    nameWithType: NameCleaningConfig
    fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.ProductMatching.ProductExtensions
  commentId: T:VetMedData.NET.ProductMatching.ProductExtensions
  parent: VetMedData.NET.ProductMatching
  name: ProductExtensions
  nameWithType: ProductExtensions
  fullName: VetMedData.NET.ProductMatching.ProductExtensions
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: VetMedData.NET.Model.Product.Name*
  commentId: Overload:VetMedData.NET.Model.Product.Name
  name: Name
  nameWithType: Product.Name
  fullName: VetMedData.NET.Model.Product.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
