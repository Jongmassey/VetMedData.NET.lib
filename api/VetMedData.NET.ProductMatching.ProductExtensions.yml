### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.ProductMatching.ProductExtensions
  commentId: T:VetMedData.NET.ProductMatching.ProductExtensions
  id: ProductExtensions
  parent: VetMedData.NET.ProductMatching
  children:
  - VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  - VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult(VetMedData.NET.Model.ActionedProduct,VetMedData.NET.Model.ReferenceProduct,VetMedData.NET.ProductMatching.ProductMatchConfig)
  langs:
  - csharp
  - vb
  name: ProductExtensions
  nameWithType: ProductExtensions
  fullName: VetMedData.NET.ProductMatching.ProductExtensions
  type: Class
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductExtensions.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ProductExtensions
    path: ProductMatching/ProductExtensions.cs
    startLine: 9
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nExtension methods for Product class\n"
  example: []
  syntax:
    content: public static class ProductExtensions
    content.vb: Public Module ProductExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  id: GetCleanedName(VetMedData.NET.Model.Product,VetMedData.NET.ProductMatching.NameCleaningConfig)
  isExtensionMethod: true
  parent: VetMedData.NET.ProductMatching.ProductExtensions
  langs:
  - csharp
  - vb
  name: GetCleanedName(Product, NameCleaningConfig)
  nameWithType: ProductExtensions.GetCleanedName(Product, NameCleaningConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName(VetMedData.NET.Model.Product, VetMedData.NET.ProductMatching.NameCleaningConfig)
  type: Method
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductExtensions.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: GetCleanedName
    path: ProductMatching/ProductExtensions.cs
    startLine: 22
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  summary: "\nExtension method to provide &quot;cleaned&quot; version of name according\nto rules defined in configuration class\n"
  example: []
  syntax:
    content: public static string GetCleanedName(this Product product, NameCleaningConfig cfg = null)
    parameters:
    - id: product
      type: VetMedData.NET.Model.Product
      description: Product from which cleaned name will be extracted
    - id: cfg
      type: VetMedData.NET.ProductMatching.NameCleaningConfig
      description: >-
        Configuration for cleaning rules.

        Defaults to DefaultMatchNameCleaningConfig
    return:
      type: System.String
      description: Name field from product, cleaned according to configured rules
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCleanedName(product As Product, cfg As NameCleaningConfig = Nothing) As String
  overload: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult(VetMedData.NET.Model.ActionedProduct,VetMedData.NET.Model.ReferenceProduct,VetMedData.NET.ProductMatching.ProductMatchConfig)
  commentId: M:VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult(VetMedData.NET.Model.ActionedProduct,VetMedData.NET.Model.ReferenceProduct,VetMedData.NET.ProductMatching.ProductMatchConfig)
  id: GetMatchingResult(VetMedData.NET.Model.ActionedProduct,VetMedData.NET.Model.ReferenceProduct,VetMedData.NET.ProductMatching.ProductMatchConfig)
  isExtensionMethod: true
  parent: VetMedData.NET.ProductMatching.ProductExtensions
  langs:
  - csharp
  - vb
  name: GetMatchingResult(ActionedProduct, ReferenceProduct, ProductMatchConfig)
  nameWithType: ProductExtensions.GetMatchingResult(ActionedProduct, ReferenceProduct, ProductMatchConfig)
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult(VetMedData.NET.Model.ActionedProduct, VetMedData.NET.Model.ReferenceProduct, VetMedData.NET.ProductMatching.ProductMatchConfig)
  type: Method
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductExtensions.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: GetMatchingResult
    path: ProductMatching/ProductExtensions.cs
    startLine: 57
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public static ProductSimilarityResult GetMatchingResult(this ActionedProduct product, ReferenceProduct referenceProduct, ProductMatchConfig cfg)
    parameters:
    - id: product
      type: VetMedData.NET.Model.ActionedProduct
    - id: referenceProduct
      type: VetMedData.NET.Model.ReferenceProduct
    - id: cfg
      type: VetMedData.NET.ProductMatching.ProductMatchConfig
    return:
      type: VetMedData.NET.ProductMatching.ProductSimilarityResult
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMatchingResult(product As ActionedProduct, referenceProduct As ReferenceProduct, cfg As ProductMatchConfig) As ProductSimilarityResult
  overload: VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
  name: GetCleanedName
  nameWithType: ProductExtensions.GetCleanedName
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetCleanedName
- uid: VetMedData.NET.Model.Product
  commentId: T:VetMedData.NET.Model.Product
  parent: VetMedData.NET.Model
  name: Product
  nameWithType: Product
  fullName: VetMedData.NET.Model.Product
- uid: VetMedData.NET.ProductMatching.NameCleaningConfig
  commentId: T:VetMedData.NET.ProductMatching.NameCleaningConfig
  parent: VetMedData.NET.ProductMatching
  name: NameCleaningConfig
  nameWithType: NameCleaningConfig
  fullName: VetMedData.NET.ProductMatching.NameCleaningConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
- uid: VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult
  name: GetMatchingResult
  nameWithType: ProductExtensions.GetMatchingResult
  fullName: VetMedData.NET.ProductMatching.ProductExtensions.GetMatchingResult
- uid: VetMedData.NET.Model.ActionedProduct
  commentId: T:VetMedData.NET.Model.ActionedProduct
  parent: VetMedData.NET.Model
  name: ActionedProduct
  nameWithType: ActionedProduct
  fullName: VetMedData.NET.Model.ActionedProduct
- uid: VetMedData.NET.Model.ReferenceProduct
  commentId: T:VetMedData.NET.Model.ReferenceProduct
  parent: VetMedData.NET.Model
  name: ReferenceProduct
  nameWithType: ReferenceProduct
  fullName: VetMedData.NET.Model.ReferenceProduct
- uid: VetMedData.NET.ProductMatching.ProductMatchConfig
  commentId: T:VetMedData.NET.ProductMatching.ProductMatchConfig
  parent: VetMedData.NET.ProductMatching
  name: ProductMatchConfig
  nameWithType: ProductMatchConfig
  fullName: VetMedData.NET.ProductMatching.ProductMatchConfig
- uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
  commentId: T:VetMedData.NET.ProductMatching.ProductSimilarityResult
  parent: VetMedData.NET.ProductMatching
  name: ProductSimilarityResult
  nameWithType: ProductSimilarityResult
  fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
