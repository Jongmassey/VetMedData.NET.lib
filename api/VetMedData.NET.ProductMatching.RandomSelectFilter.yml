### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.ProductMatching.RandomSelectFilter
  commentId: T:VetMedData.NET.ProductMatching.RandomSelectFilter
  id: RandomSelectFilter
  parent: VetMedData.NET.ProductMatching
  children:
  - VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  langs:
  - csharp
  - vb
  name: RandomSelectFilter
  nameWithType: RandomSelectFilter
  fullName: VetMedData.NET.ProductMatching.RandomSelectFilter
  type: Class
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchResultFilter.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: RandomSelectFilter
    path: ProductMatching/ProductMatchResultFilter.cs
    startLine: 50
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: 'public class RandomSelectFilter : IProductMatchResultFilter'
    content.vb: >-
      Public Class RandomSelectFilter
          Implements IProductMatchResultFilter
  inheritance:
  - System.Object
  implements:
  - VetMedData.NET.ProductMatching.IProductMatchResultFilter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  commentId: M:VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  id: FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  parent: VetMedData.NET.ProductMatching.RandomSelectFilter
  langs:
  - csharp
  - vb
  name: FilterResults(IEnumerable<ProductSimilarityResult>)
  nameWithType: RandomSelectFilter.FilterResults(IEnumerable<ProductSimilarityResult>)
  fullName: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults(System.Collections.Generic.IEnumerable<VetMedData.NET.ProductMatching.ProductSimilarityResult>)
  type: Method
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchResultFilter.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: FilterResults
    path: ProductMatching/ProductMatchResultFilter.cs
    startLine: 52
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public IEnumerable<ProductSimilarityResult> FilterResults(IEnumerable<ProductSimilarityResult> results)
    parameters:
    - id: results
      type: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
    return:
      type: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
    content.vb: Public Function FilterResults(results As IEnumerable(Of ProductSimilarityResult)) As IEnumerable(Of ProductSimilarityResult)
  overload: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults*
  implements:
  - VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  nameWithType.vb: RandomSelectFilter.FilterResults(IEnumerable(Of ProductSimilarityResult))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults(System.Collections.Generic.IEnumerable(Of VetMedData.NET.ProductMatching.ProductSimilarityResult))
  name.vb: FilterResults(IEnumerable(Of ProductSimilarityResult))
references:
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter
  commentId: T:VetMedData.NET.ProductMatching.IProductMatchResultFilter
  parent: VetMedData.NET.ProductMatching
  name: IProductMatchResultFilter
  nameWithType: IProductMatchResultFilter
  fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults*
  commentId: Overload:VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults
  name: FilterResults
  nameWithType: RandomSelectFilter.FilterResults
  fullName: VetMedData.NET.ProductMatching.RandomSelectFilter.FilterResults
- uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  commentId: M:VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
  parent: VetMedData.NET.ProductMatching.IProductMatchResultFilter
  isExternal: true
  name: FilterResults(IEnumerable<ProductSimilarityResult>)
  nameWithType: IProductMatchResultFilter.FilterResults(IEnumerable<ProductSimilarityResult>)
  fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable<VetMedData.NET.ProductMatching.ProductSimilarityResult>)
  nameWithType.vb: IProductMatchResultFilter.FilterResults(IEnumerable(Of ProductSimilarityResult))
  fullName.vb: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable(Of VetMedData.NET.ProductMatching.ProductSimilarityResult))
  name.vb: FilterResults(IEnumerable(Of ProductSimilarityResult))
  spec.csharp:
  - uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
    name: FilterResults
    nameWithType: IProductMatchResultFilter.FilterResults
    fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults(System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult})
    name: FilterResults
    nameWithType: IProductMatchResultFilter.FilterResults
    fullName: VetMedData.NET.ProductMatching.IProductMatchResultFilter.FilterResults
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
  commentId: T:System.Collections.Generic.IEnumerable{VetMedData.NET.ProductMatching.ProductSimilarityResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProductSimilarityResult>
  nameWithType: IEnumerable<ProductSimilarityResult>
  fullName: System.Collections.Generic.IEnumerable<VetMedData.NET.ProductMatching.ProductSimilarityResult>
  nameWithType.vb: IEnumerable(Of ProductSimilarityResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VetMedData.NET.ProductMatching.ProductSimilarityResult)
  name.vb: IEnumerable(Of ProductSimilarityResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VetMedData.NET.ProductMatching.ProductSimilarityResult
    name: ProductSimilarityResult
    nameWithType: ProductSimilarityResult
    fullName: VetMedData.NET.ProductMatching.ProductSimilarityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
