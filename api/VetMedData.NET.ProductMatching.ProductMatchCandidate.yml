### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate
  commentId: T:VetMedData.NET.ProductMatching.ProductMatchCandidate
  id: ProductMatchCandidate
  parent: VetMedData.NET.ProductMatching
  children:
  - VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
  - VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
  - VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
  langs:
  - csharp
  - vb
  name: ProductMatchCandidate
  nameWithType: ProductMatchCandidate
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate
  type: Class
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchCandidate.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ProductMatchCandidate
    path: ProductMatching/ProductMatchCandidate.cs
    startLine: 6
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public class ProductMatchCandidate
    content.vb: Public Class ProductMatchCandidate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
  commentId: P:VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
  id: Name
  parent: VetMedData.NET.ProductMatching.ProductMatchCandidate
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProductMatchCandidate.Name
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchCandidate.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Name
    path: ProductMatching/ProductMatchCandidate.cs
    startLine: 8
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: VetMedData.NET.ProductMatching.ProductMatchCandidate.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
  commentId: P:VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
  id: ActionDate
  parent: VetMedData.NET.ProductMatching.ProductMatchCandidate
  langs:
  - csharp
  - vb
  name: ActionDate
  nameWithType: ProductMatchCandidate.ActionDate
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchCandidate.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ActionDate
    path: ProductMatching/ProductMatchCandidate.cs
    startLine: 9
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public DateTime? ActionDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ActionDate As Date?
  overload: VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
  commentId: P:VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
  id: TargetSpecies
  parent: VetMedData.NET.ProductMatching.ProductMatchCandidate
  langs:
  - csharp
  - vb
  name: TargetSpecies
  nameWithType: ProductMatchCandidate.TargetSpecies
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
  type: Property
  source:
    remote:
      path: VetMedData.NET/ProductMatching/ProductMatchCandidate.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: TargetSpecies
    path: ProductMatching/ProductMatchCandidate.cs
    startLine: 10
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.ProductMatching
  syntax:
    content: public string[] TargetSpecies { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property TargetSpecies As String()
  overload: VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VetMedData.NET.ProductMatching
  commentId: N:VetMedData.NET.ProductMatching
  name: VetMedData.NET.ProductMatching
  nameWithType: VetMedData.NET.ProductMatching
  fullName: VetMedData.NET.ProductMatching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.Name*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
  name: Name
  nameWithType: ProductMatchCandidate.Name
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
  name: ActionDate
  nameWithType: ProductMatchCandidate.ActionDate
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.ActionDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies*
  commentId: Overload:VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
  name: TargetSpecies
  nameWithType: ProductMatchCandidate.TargetSpecies
  fullName: VetMedData.NET.ProductMatching.ProductMatchCandidate.TargetSpecies
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
