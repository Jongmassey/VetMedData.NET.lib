### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.Model.PackagedProduct
  commentId: T:VetMedData.NET.Model.PackagedProduct
  id: PackagedProduct
  parent: VetMedData.NET.Model
  children:
  - VetMedData.NET.Model.PackagedProduct.Batch
  - VetMedData.NET.Model.PackagedProduct.Expiry
  - VetMedData.NET.Model.PackagedProduct.Package
  - VetMedData.NET.Model.PackagedProduct.Product
  langs:
  - csharp
  - vb
  name: PackagedProduct
  nameWithType: PackagedProduct
  fullName: VetMedData.NET.Model.PackagedProduct
  type: Class
  source:
    remote:
      path: VetMedData.NET/Model/PackagedProduct.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: PackagedProduct
    path: Model/PackagedProduct.cs
    startLine: 34
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  summary: "\nProperties of package of a product\n"
  example: []
  syntax:
    content: public abstract class PackagedProduct
    content.vb: Public MustInherit Class PackagedProduct
  inheritance:
  - System.Object
  derivedClasses:
  - VetMedData.NET.Model.ActionedProduct
  - VetMedData.NET.Model.AdministeredProduct
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VetMedData.NET.Model.PackagedProduct.Product
  commentId: P:VetMedData.NET.Model.PackagedProduct.Product
  id: Product
  parent: VetMedData.NET.Model.PackagedProduct
  langs:
  - csharp
  - vb
  name: Product
  nameWithType: PackagedProduct.Product
  fullName: VetMedData.NET.Model.PackagedProduct.Product
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/PackagedProduct.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Product
    path: Model/PackagedProduct.cs
    startLine: 36
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public Product Product { get; set; }
    parameters: []
    return:
      type: VetMedData.NET.Model.Product
    content.vb: Public Property Product As Product
  overload: VetMedData.NET.Model.PackagedProduct.Product*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.PackagedProduct.Expiry
  commentId: P:VetMedData.NET.Model.PackagedProduct.Expiry
  id: Expiry
  parent: VetMedData.NET.Model.PackagedProduct
  langs:
  - csharp
  - vb
  name: Expiry
  nameWithType: PackagedProduct.Expiry
  fullName: VetMedData.NET.Model.PackagedProduct.Expiry
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/PackagedProduct.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Expiry
    path: Model/PackagedProduct.cs
    startLine: 37
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public DateTime Expiry { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Expiry As Date
  overload: VetMedData.NET.Model.PackagedProduct.Expiry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.PackagedProduct.Batch
  commentId: P:VetMedData.NET.Model.PackagedProduct.Batch
  id: Batch
  parent: VetMedData.NET.Model.PackagedProduct
  langs:
  - csharp
  - vb
  name: Batch
  nameWithType: PackagedProduct.Batch
  fullName: VetMedData.NET.Model.PackagedProduct.Batch
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/PackagedProduct.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Batch
    path: Model/PackagedProduct.cs
    startLine: 38
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string Batch { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Batch As String
  overload: VetMedData.NET.Model.PackagedProduct.Batch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.PackagedProduct.Package
  commentId: P:VetMedData.NET.Model.PackagedProduct.Package
  id: Package
  parent: VetMedData.NET.Model.PackagedProduct
  langs:
  - csharp
  - vb
  name: Package
  nameWithType: PackagedProduct.Package
  fullName: VetMedData.NET.Model.PackagedProduct.Package
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/PackagedProduct.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Package
    path: Model/PackagedProduct.cs
    startLine: 39
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public Package Package { get; set; }
    parameters: []
    return:
      type: VetMedData.NET.Model.Package
    content.vb: Public Property Package As Package
  overload: VetMedData.NET.Model.PackagedProduct.Package*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.Model.PackagedProduct.Product*
  commentId: Overload:VetMedData.NET.Model.PackagedProduct.Product
  name: Product
  nameWithType: PackagedProduct.Product
  fullName: VetMedData.NET.Model.PackagedProduct.Product
- uid: VetMedData.NET.Model.Product
  commentId: T:VetMedData.NET.Model.Product
  parent: VetMedData.NET.Model
  name: Product
  nameWithType: Product
  fullName: VetMedData.NET.Model.Product
- uid: VetMedData.NET.Model.PackagedProduct.Expiry*
  commentId: Overload:VetMedData.NET.Model.PackagedProduct.Expiry
  name: Expiry
  nameWithType: PackagedProduct.Expiry
  fullName: VetMedData.NET.Model.PackagedProduct.Expiry
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: VetMedData.NET.Model.PackagedProduct.Batch*
  commentId: Overload:VetMedData.NET.Model.PackagedProduct.Batch
  name: Batch
  nameWithType: PackagedProduct.Batch
  fullName: VetMedData.NET.Model.PackagedProduct.Batch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VetMedData.NET.Model.PackagedProduct.Package*
  commentId: Overload:VetMedData.NET.Model.PackagedProduct.Package
  name: Package
  nameWithType: PackagedProduct.Package
  fullName: VetMedData.NET.Model.PackagedProduct.Package
- uid: VetMedData.NET.Model.Package
  commentId: T:VetMedData.NET.Model.Package
  parent: VetMedData.NET.Model
  name: Package
  nameWithType: Package
  fullName: VetMedData.NET.Model.Package
