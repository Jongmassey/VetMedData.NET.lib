### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.Model.Package
  commentId: T:VetMedData.NET.Model.Package
  id: Package
  parent: VetMedData.NET.Model
  children:
  - VetMedData.NET.Model.Package.DefaultPackages
  - VetMedData.NET.Model.Package.DisplayName
  - VetMedData.NET.Model.Package.PackageSize
  - VetMedData.NET.Model.Package.PackageType
  - VetMedData.NET.Model.Package.ToString
  langs:
  - csharp
  - vb
  name: Package
  nameWithType: Package
  fullName: VetMedData.NET.Model.Package
  type: Class
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: Package
    path: Model/Package.cs
    startLine: 7
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  summary: "\nDefines properties of package in which a product might be packaged\n"
  example: []
  syntax:
    content: public class Package
    content.vb: Public Class Package
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VetMedData.NET.Model.Package.PackageType
  commentId: P:VetMedData.NET.Model.Package.PackageType
  id: PackageType
  parent: VetMedData.NET.Model.Package
  langs:
  - csharp
  - vb
  name: PackageType
  nameWithType: Package.PackageType
  fullName: VetMedData.NET.Model.Package.PackageType
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: PackageType
    path: Model/Package.cs
    startLine: 9
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public PackageType PackageType { get; set; }
    parameters: []
    return:
      type: VetMedData.NET.Model.PackageType
    content.vb: Public Property PackageType As PackageType
  overload: VetMedData.NET.Model.Package.PackageType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.Package.PackageSize
  commentId: P:VetMedData.NET.Model.Package.PackageSize
  id: PackageSize
  parent: VetMedData.NET.Model.Package
  langs:
  - csharp
  - vb
  name: PackageSize
  nameWithType: Package.PackageSize
  fullName: VetMedData.NET.Model.Package.PackageSize
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: PackageSize
    path: Model/Package.cs
    startLine: 10
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public float PackageSize { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PackageSize As Single
  overload: VetMedData.NET.Model.Package.PackageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VetMedData.NET.Model.Package.DisplayName
  commentId: P:VetMedData.NET.Model.Package.DisplayName
  id: DisplayName
  parent: VetMedData.NET.Model.Package
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Package.DisplayName
  fullName: VetMedData.NET.Model.Package.DisplayName
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: DisplayName
    path: Model/Package.cs
    startLine: 11
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayName As String
  overload: VetMedData.NET.Model.Package.DisplayName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VetMedData.NET.Model.Package.ToString
  commentId: M:VetMedData.NET.Model.Package.ToString
  id: ToString
  parent: VetMedData.NET.Model.Package
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Package.ToString()
  fullName: VetMedData.NET.Model.Package.ToString()
  type: Method
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: ToString
    path: Model/Package.cs
    startLine: 13
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VetMedData.NET.Model.Package.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VetMedData.NET.Model.Package.DefaultPackages
  commentId: P:VetMedData.NET.Model.Package.DefaultPackages
  id: DefaultPackages
  parent: VetMedData.NET.Model.Package
  langs:
  - csharp
  - vb
  name: DefaultPackages
  nameWithType: Package.DefaultPackages
  fullName: VetMedData.NET.Model.Package.DefaultPackages
  type: Property
  source:
    remote:
      path: VetMedData.NET/Model/Package.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: DefaultPackages
    path: Model/Package.cs
    startLine: 21
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Model
  summary: "\nSome common package types in cattle practice\n"
  example: []
  syntax:
    content: public static IList<Package> DefaultPackages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VetMedData.NET.Model.Package}
    content.vb: Public Shared ReadOnly Property DefaultPackages As IList(Of Package)
  overload: VetMedData.NET.Model.Package.DefaultPackages*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.Model.Package.PackageType*
  commentId: Overload:VetMedData.NET.Model.Package.PackageType
  name: PackageType
  nameWithType: Package.PackageType
  fullName: VetMedData.NET.Model.Package.PackageType
- uid: VetMedData.NET.Model.PackageType
  commentId: T:VetMedData.NET.Model.PackageType
  parent: VetMedData.NET.Model
  name: PackageType
  nameWithType: PackageType
  fullName: VetMedData.NET.Model.PackageType
- uid: VetMedData.NET.Model.Package.PackageSize*
  commentId: Overload:VetMedData.NET.Model.Package.PackageSize
  name: PackageSize
  nameWithType: Package.PackageSize
  fullName: VetMedData.NET.Model.Package.PackageSize
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VetMedData.NET.Model.Package.DisplayName*
  commentId: Overload:VetMedData.NET.Model.Package.DisplayName
  name: DisplayName
  nameWithType: Package.DisplayName
  fullName: VetMedData.NET.Model.Package.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model.Package.ToString*
  commentId: Overload:VetMedData.NET.Model.Package.ToString
  name: ToString
  nameWithType: Package.ToString
  fullName: VetMedData.NET.Model.Package.ToString
- uid: VetMedData.NET.Model.Package.DefaultPackages*
  commentId: Overload:VetMedData.NET.Model.Package.DefaultPackages
  name: DefaultPackages
  nameWithType: Package.DefaultPackages
  fullName: VetMedData.NET.Model.Package.DefaultPackages
- uid: System.Collections.Generic.IList{VetMedData.NET.Model.Package}
  commentId: T:System.Collections.Generic.IList{VetMedData.NET.Model.Package}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Package>
  nameWithType: IList<Package>
  fullName: System.Collections.Generic.IList<VetMedData.NET.Model.Package>
  nameWithType.vb: IList(Of Package)
  fullName.vb: System.Collections.Generic.IList(Of VetMedData.NET.Model.Package)
  name.vb: IList(Of Package)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VetMedData.NET.Model.Package
    name: Package
    nameWithType: Package
    fullName: VetMedData.NET.Model.Package
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VetMedData.NET.Model.Package
    name: Package
    nameWithType: Package
    fullName: VetMedData.NET.Model.Package
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
