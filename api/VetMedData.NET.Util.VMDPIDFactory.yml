### YamlMime:ManagedReference
items:
- uid: VetMedData.NET.Util.VMDPIDFactory
  commentId: T:VetMedData.NET.Util.VMDPIDFactory
  id: VMDPIDFactory
  parent: VetMedData.NET.Util
  children:
  - VetMedData.NET.Util.VMDPIDFactory.GetSpc(VetMedData.NET.Model.Product)
  - VetMedData.NET.Util.VMDPIDFactory.GetVmdPid(VetMedData.NET.Util.PidFactoryOptions)
  langs:
  - csharp
  - vb
  name: VMDPIDFactory
  nameWithType: VMDPIDFactory
  fullName: VetMedData.NET.Util.VMDPIDFactory
  type: Class
  source:
    remote:
      path: VetMedData.NET/Util/VMDPIDFactory.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: VMDPIDFactory
    path: Util/VMDPIDFactory.cs
    startLine: 37
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Util
  summary: "\nFactory class for <xref href=\"VetMedData.NET.Model.VMDPID\" data-throw-if-not-resolved=\"false\"></xref>, handles GETting and parsing of XML.\nHas singleton-like behaviour for VMDPID class as to reduce\nnumber of HTTP GETs to VMD servers.\n"
  example: []
  syntax:
    content: public static class VMDPIDFactory
    content.vb: Public Module VMDPIDFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VetMedData.NET.Util.VMDPIDFactory.GetVmdPid(VetMedData.NET.Util.PidFactoryOptions)
  commentId: M:VetMedData.NET.Util.VMDPIDFactory.GetVmdPid(VetMedData.NET.Util.PidFactoryOptions)
  id: GetVmdPid(VetMedData.NET.Util.PidFactoryOptions)
  parent: VetMedData.NET.Util.VMDPIDFactory
  langs:
  - csharp
  - vb
  name: GetVmdPid(PidFactoryOptions)
  nameWithType: VMDPIDFactory.GetVmdPid(PidFactoryOptions)
  fullName: VetMedData.NET.Util.VMDPIDFactory.GetVmdPid(VetMedData.NET.Util.PidFactoryOptions)
  type: Method
  source:
    remote:
      path: VetMedData.NET/Util/VMDPIDFactory.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: GetVmdPid
    path: Util/VMDPIDFactory.cs
    startLine: 55
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Util
  summary: "\nGets Product Information Database (PID) from Veterinary Medicines Directorate (VMD)\n"
  example: []
  syntax:
    content: public static Task<VMDPID> GetVmdPid(PidFactoryOptions options = PidFactoryOptions.None)
    parameters:
    - id: options
      type: VetMedData.NET.Util.PidFactoryOptions
      description: <xref href="VetMedData.NET.Util.PidFactoryOptions" data-throw-if-not-resolved="false"></xref>Options for processing and storage of PID
    return:
      type: System.Threading.Tasks.Task{VetMedData.NET.Model.VMDPID}
      description: ''
    content.vb: Public Shared Function GetVmdPid(options As PidFactoryOptions = PidFactoryOptions.None) As Task(Of VMDPID)
  overload: VetMedData.NET.Util.VMDPIDFactory.GetVmdPid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VetMedData.NET.Util.VMDPIDFactory.GetSpc(VetMedData.NET.Model.Product)
  commentId: M:VetMedData.NET.Util.VMDPIDFactory.GetSpc(VetMedData.NET.Model.Product)
  id: GetSpc(VetMedData.NET.Model.Product)
  parent: VetMedData.NET.Util.VMDPIDFactory
  langs:
  - csharp
  - vb
  name: GetSpc(Product)
  nameWithType: VMDPIDFactory.GetSpc(Product)
  fullName: VetMedData.NET.Util.VMDPIDFactory.GetSpc(VetMedData.NET.Model.Product)
  type: Method
  source:
    remote:
      path: VetMedData.NET/Util/VMDPIDFactory.cs
      branch: master
      repo: https://github.com/Jongmassey/VetMedData.NET.git
    id: GetSpc
    path: Util/VMDPIDFactory.cs
    startLine: 114
  assemblies:
  - VetMedData.NET
  namespace: VetMedData.NET.Util
  summary: "\nHelper method designed for testing to download SPC document\n"
  example: []
  syntax:
    content: public static Task<string> GetSpc(Product p)
    parameters:
    - id: p
      type: VetMedData.NET.Model.Product
      description: <xref href="VetMedData.NET.Model.ReferenceProduct" data-throw-if-not-resolved="false"></xref> to get SPC link for
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Path to downloaded file in temp folder
    content.vb: Public Shared Function GetSpc(p As Product) As Task(Of String)
  overload: VetMedData.NET.Util.VMDPIDFactory.GetSpc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VetMedData.NET.Model.VMDPID
  commentId: T:VetMedData.NET.Model.VMDPID
  name: VMDPID
  nameWithType: VMDPID
  fullName: VetMedData.NET.Model.VMDPID
- uid: VetMedData.NET.Util
  commentId: N:VetMedData.NET.Util
  name: VetMedData.NET.Util
  nameWithType: VetMedData.NET.Util
  fullName: VetMedData.NET.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VetMedData.NET.Util.PidFactoryOptions
  commentId: T:VetMedData.NET.Util.PidFactoryOptions
  parent: VetMedData.NET.Util
  name: PidFactoryOptions
  nameWithType: PidFactoryOptions
  fullName: VetMedData.NET.Util.PidFactoryOptions
- uid: VetMedData.NET.Util.VMDPIDFactory.GetVmdPid*
  commentId: Overload:VetMedData.NET.Util.VMDPIDFactory.GetVmdPid
  name: GetVmdPid
  nameWithType: VMDPIDFactory.GetVmdPid
  fullName: VetMedData.NET.Util.VMDPIDFactory.GetVmdPid
- uid: System.Threading.Tasks.Task{VetMedData.NET.Model.VMDPID}
  commentId: T:System.Threading.Tasks.Task{VetMedData.NET.Model.VMDPID}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VMDPID>
  nameWithType: Task<VMDPID>
  fullName: System.Threading.Tasks.Task<VetMedData.NET.Model.VMDPID>
  nameWithType.vb: Task(Of VMDPID)
  fullName.vb: System.Threading.Tasks.Task(Of VetMedData.NET.Model.VMDPID)
  name.vb: Task(Of VMDPID)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VetMedData.NET.Model.VMDPID
    name: VMDPID
    nameWithType: VMDPID
    fullName: VetMedData.NET.Model.VMDPID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VetMedData.NET.Model.VMDPID
    name: VMDPID
    nameWithType: VMDPID
    fullName: VetMedData.NET.Model.VMDPID
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: VetMedData.NET.Model.ReferenceProduct
  commentId: T:VetMedData.NET.Model.ReferenceProduct
  parent: VetMedData.NET.Model
  name: ReferenceProduct
  nameWithType: ReferenceProduct
  fullName: VetMedData.NET.Model.ReferenceProduct
- uid: VetMedData.NET.Util.VMDPIDFactory.GetSpc*
  commentId: Overload:VetMedData.NET.Util.VMDPIDFactory.GetSpc
  name: GetSpc
  nameWithType: VMDPIDFactory.GetSpc
  fullName: VetMedData.NET.Util.VMDPIDFactory.GetSpc
- uid: VetMedData.NET.Model.Product
  commentId: T:VetMedData.NET.Model.Product
  parent: VetMedData.NET.Model
  name: Product
  nameWithType: Product
  fullName: VetMedData.NET.Model.Product
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VetMedData.NET.Model
  commentId: N:VetMedData.NET.Model
  name: VetMedData.NET.Model
  nameWithType: VetMedData.NET.Model
  fullName: VetMedData.NET.Model
